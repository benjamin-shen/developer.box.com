# The name of this GH action
name: CI

# Defines when this action should be run
on:
  # Run on any Push
  push:
    branches-ignore:
      - jp  
  # Run for PRs on main and staging
  pull_request:
    branches: jp-staging

jobs:
 # The deploy task starts a Netlify build for any changes pushed to the jp-staging branch (or a PR)
  push-to-jp-staging:
    # Run this on the latest ubuntu
    runs-on: ubuntu-latest

    # Only run for the jp-staging branch
    if: ${{ github.ref == 'refs/heads/jp-staging' }}

    # The following steps are performed for each push job
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
     
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build the content
        run: |
          yarn install
          yarn build

      - name: Push the content
        uses: s0/git-publish-subdir-action@v2.4.0
        env:
          REPO: self
          BRANCH: jp-staging
          FOLDER: compiled
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Trigger Netlify deployment"
        uses: joelwmale/webhook-action@2.0.2
        env:
          WEBHOOK_URL: ${{ secrets.NETLIFY_BOXDEV_JP_STAGING_WEBHOOK }}
          data: "{}"

      - name: Send Slack notification
        uses: Ilshidur/action-slack@2.0.2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: GitHub Actions
          SLACK_AVATAR: "https://avatars3.githubusercontent.com/u/8659759?s=200&v=4"
        with:
          args: "Pushed latest Markdown to `jp-staging` branch :rocket:"

      - name: Send Slack notification
        uses: Ilshidur/action-slack@2.0.2
        if: ${{ failure() }}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: GitHub Actions
          SLACK_AVATAR: "https://avatars3.githubusercontent.com/u/8659759?s=200&v=4"
        with:
          args: "Error running `deploy-jp-staging` job in OpenAPI CI"
